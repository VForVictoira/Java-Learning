
public class MethodLeaning 
{
	/*
	 * 以下是对方法和方法体的学习
	 * 部分程序不能运行
	 * 此程序作为笔记使用
	 * */
	/*
	 * 方法声明之后的一对{ } 以及其之间的内容称为方法体的主体
	 * 方法体的内容包括局部变量的声明和Java语句
	 * 及方法体内可以对成员变量和方法体中声明的局部变量进行操作*/
	int getSum(int n) // 参数变量 n 是局部变量
	{
		int sum = 0;   // 声明局部变量 sum
		/*局部变量只在方法内有效
		 * 并且可以屏蔽与之相同的全局变量*/
		for(int i =0;i<=n;i++)
			sum+=i;
		return sum;
	}
	//////////////////////////////////////////////////////
	int m =10,sum = 0;
	void f()  // 定义f()方法
	{
		if(m>9)
		{
			int z = 10;  // z 为局部变量，只在if{} 内有效
			z += 2*m;
		}
		for(int i=0;i<m;i++)
			sum+=i;   // i 为局部变量，只在for循环语句内有效
		m = sum;
		z = i+sum;  // 非法，因为i 和 z 已经无效了
	}
	
	///////////////////////////////////////////////////////
	/*区分成员变量和局部变量*/	
	class Tom
	{
		int x = 10,y; // 成员变量是有默认值的
		void f()
		{
			int x = 5; // x 在 f()方法内为局部变量，并隐藏上面的成员变量x=10
			y = x + x;  // y 结果等于 10 
		}
		// 若使用 this 关键字则可以使用 成员变量的值
		void f() 
		{
			int x = 5;  // 局部变量没有默认值
			y = x + this.x;// y 结果等于 15
		}
	}

}














